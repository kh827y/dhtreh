"use client";

import React from "react";
import { Card } from "@loyalty/ui";
import Toggle from "../../../components/Toggle";

type MechanicCard = {
  id: string;
  title: string;
  description: string;
  icon: string;
  href: string;
  toggle?: boolean;
};

const cards: MechanicCard[] = [
  {
    id: "levels",
    title: "–£—Ä–æ–≤–Ω–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤",
    description: "–°—Ç—É–ø–µ–Ω–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ —É—Å–ª–æ–≤–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞",
    icon: "üèÜ",
    href: "/loyalty/mechanics/levels",
  },
  {
    id: "redeem-limits",
    title: "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤ –±–∞–ª–ª–∞—Ö –∑–∞ –ø–æ–∫—É–ø–∫–∏",
    description: "–°—Ä–æ–∫ –∂–∏–∑–Ω–∏, –∑–∞–ø—Ä–µ—Ç—ã –∏ –∑–∞–¥–µ—Ä–∂–∫–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è",
    icon: "‚öñÔ∏è",
    href: "/loyalty/mechanics/redeem-limits",
  },
  {
    id: "auto-return",
    title: "–ê–≤—Ç–æ–≤–æ–∑–≤—Ä–∞—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤",
    description: "–í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ–¥–∞—Ä–æ—á–Ω—ã–º–∏ –±–∞–ª–ª–∞–º–∏",
    icon: "üîÅ",
    href: "/loyalty/mechanics/auto-return",
    toggle: true,
  },
  {
    id: "birthday",
    title: "–ü–æ–∑–¥—Ä–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –¥–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—è",
    description: "–ê–≤—Ç–æ–ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –ø–æ–¥–∞—Ä–∫–∏ –∫ –ø—Ä–∞–∑–¥–Ω–∏–∫—É",
    icon: "üéÇ",
    href: "/loyalty/mechanics/birthday",
    toggle: true,
  },
  {
    id: "registration-bonus",
    title: "–ë–∞–ª–ª—ã –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é",
    description: "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å –Ω–æ–≤—ã–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º",
    icon: "üéÅ",
    href: "/loyalty/mechanics/registration-bonus",
    toggle: true,
  },
  {
    id: "ttl",
    title: "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Å–≥–æ—Ä–∞–Ω–∏–∏ –±–∞–ª–ª–æ–≤",
    description: "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤ –æ —Å–∫–æ—Ä–æ–º —Å–≥–æ—Ä–∞–Ω–∏–∏",
    icon: "‚è≥",
    href: "/loyalty/mechanics/ttl",
    toggle: true,
  },
  {
    id: "referral",
    title: "–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞",
    description: "–í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥—Ä—É–∑–µ–π",
    icon: "ü§ù",
    href: "/referrals/program",
  },
];

export default function MechanicsPage() {
  const [enabled, setEnabled] = React.useState<Record<string, boolean>>({
    "auto-return": true,
    birthday: true,
    "registration-bonus": false,
    ttl: true,
  });

  const handleToggle = React.useCallback((id: string, value: boolean) => {
    setEnabled((prev) => ({ ...prev, [id]: value }));
  }, []);

  return (
    <div style={{ display: "grid", gap: 24 }}>
      <div>
        <div style={{ fontSize: 28, fontWeight: 700, marginBottom: 6 }}>–ú–µ—Ö–∞–Ω–∏–∫–∏</div>
        <div style={{ fontSize: 14, opacity: 0.7 }}>–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤</div>
      </div>

      <div
        style={{
          display: "grid",
          gap: 16,
          gridTemplateColumns: "repeat(auto-fill, minmax(260px, 1fr))",
        }}
      >
        {cards.map((card) => {
          const showToggle = Boolean(card.toggle);
          const isOn = enabled[card.id];
          return (
            <Card key={card.id} style={{ display: "flex", flexDirection: "column", justifyContent: "space-between", padding: 20 }}>
              <button
                onClick={() => (window.location.href = card.href)}
                style={{
                  all: "unset",
                  display: "grid",
                  gap: 12,
                  cursor: "pointer",
                }}
              >
                <div
                  aria-hidden
                  style={{
                    width: 48,
                    height: 48,
                    borderRadius: 14,
                    background: "rgba(148,163,184,0.12)",
                    display: "grid",
                    placeItems: "center",
                    fontSize: 24,
                  }}
                >
                  {card.icon}
                </div>
                <div style={{ display: "grid", gap: 6 }}>
                  <div style={{ fontSize: 18, fontWeight: 600 }}>{card.title}</div>
                  <div style={{ fontSize: 13, opacity: 0.7, lineHeight: 1.45 }}>{card.description}</div>
                </div>
              </button>

              <div style={{ marginTop: 18, display: "flex", justifyContent: "space-between", alignItems: "center" }}>
                <a
                  href={card.href}
                  style={{ color: "var(--brand-primary)", fontSize: 13, textDecoration: "none" }}
                >
                  –û—Ç–∫—Ä—ã—Ç—å
                </a>
                {showToggle && (
                  <Toggle
                    checked={!!isOn}
                    onChange={(value) => handleToggle(card.id, value)}
                    label={isOn ? "–í–∫–ª—é—á–µ–Ω–æ" : "–û—Ç–∫–ª—é—á–µ–Ω–æ"}
                  />
                )}
              </div>
            </Card>
          );
        })}
      </div>
    </div>
  );
}
