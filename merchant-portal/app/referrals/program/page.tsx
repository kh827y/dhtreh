"use client";

import React from "react";
import { Button, Card, CardBody } from "@loyalty/ui";
import Toggle from "../../../components/Toggle";

const rewardTriggers = [
  { value: "first", label: "–ó–∞ –ø–µ—Ä–≤—É—é –ø–æ–∫—É–ø–∫—É –¥—Ä—É–≥–∞" },
  { value: "all", label: "–ó–∞ –≤—Å–µ –ø–æ–∫—É–ø–∫–∏ –¥—Ä—É–≥–∞" },
] as const;

const rewardTypes = [
  { value: "fixed", label: "–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤" },
  { value: "percent", label: "–ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç —Å—É–º–º—ã –ø–æ–∫—É–ø–∫–∏" },
] as const;

export default function ReferralProgramSettingsPage() {
  const [enabled, setEnabled] = React.useState(true);
  const [trigger, setTrigger] = React.useState<typeof rewardTriggers[number]["value"]>("first");
  const [type, setType] = React.useState<typeof rewardTypes[number]["value"]>("fixed");
  const [multiLevel, setMultiLevel] = React.useState(false);
  const [rewardValue, setRewardValue] = React.useState("300");
  const [friendBonus, setFriendBonus] = React.useState("150");
  const [stackWithRegistration, setStackWithRegistration] = React.useState(false);
  const [message, setMessage] = React.useState("–†–∞—Å—Å–∫–∞–∂–∏ –¥—Ä—É–∑—å—è–º –æ –Ω–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –∏ –ø–æ–ª—É—á–∏ –±–æ–Ω—É—Å. –î–µ–ª–∏—Å—å —Å—Å—ã–ª–∫–æ–π {link} –∏–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥–æ–º {code}.");

  const charsLeft = Math.max(0, 300 - message.length);

  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {
    event.preventDefault();
    alert("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã (–¥–µ–º–æ)");
  }

  return (
    <div style={{ display: "grid", gap: 24 }}>
      <nav style={{ fontSize: 13, opacity: 0.75 }}>
        <a href="/loyalty/mechanics" style={{ color: "inherit", textDecoration: "none" }}>–ú–µ—Ö–∞–Ω–∏–∫–∏</a>
        <span style={{ margin: "0 8px" }}>‚Üí</span>
        <span style={{ color: "var(--brand-primary)" }}>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</span>
      </nav>

      <div>
        <div style={{ fontSize: 26, fontWeight: 700 }}>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</div>
        <div style={{ fontSize: 13, opacity: 0.7 }}>–í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–∞–π—Ç–µ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥—Ä—É–∑–µ–π</div>
      </div>

      <Card>
        <CardBody>
          <form onSubmit={handleSubmit} style={{ display: "grid", gap: 24 }}>
            <Toggle checked={enabled} onChange={setEnabled} label={enabled ? "–°—Ü–µ–Ω–∞—Ä–∏–π –≤–∫–ª—é—á–µ–Ω" : "–°—Ü–µ–Ω–∞—Ä–∏–π –≤—ã–∫–ª—é—á–µ–Ω"} />

            <section style={{ display: "grid", gap: 16 }}>
              <div style={{ fontSize: 16, fontWeight: 600 }}>–ü—Ä–∏–≥–ª–∞—à–∞—é—â–∏–π</div>

              <fieldset style={{ border: "none", padding: 0, display: "grid", gap: 8 }}>
                <legend style={{ fontSize: 13, opacity: 0.7 }}>–ó–∞ —á—Ç–æ –ø–æ–æ—â—Ä—è—Ç—å?</legend>
                {rewardTriggers.map((option) => (
                  <label key={option.value} style={{ display: "flex", gap: 10, alignItems: "center" }}>
                    <input
                      type="radio"
                      name="reward-trigger"
                      value={option.value}
                      checked={trigger === option.value}
                      onChange={() => setTrigger(option.value)}
                    />
                    {option.label}
                  </label>
                ))}
              </fieldset>

              <fieldset style={{ border: "none", padding: 0, display: "grid", gap: 8 }}>
                <legend style={{ fontSize: 13, opacity: 0.7 }}>–¢–∏–ø –ø–æ–æ—â—Ä–µ–Ω–∏—è</legend>
                {rewardTypes.map((option) => (
                  <label key={option.value} style={{ display: "flex", gap: 10, alignItems: "center" }}>
                    <input
                      type="radio"
                      name="reward-type"
                      value={option.value}
                      checked={type === option.value}
                      onChange={() => {
                        setType(option.value);
                        setRewardValue(option.value === "fixed" ? "300" : "10");
                      }}
                    />
                    {option.label}
                  </label>
                ))}
              </fieldset>

              <Toggle
                checked={multiLevel}
                onChange={setMultiLevel}
                label="–ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–æ–æ—â—Ä–µ–Ω–∏—è"
              />
              {multiLevel && (
                <div style={{ fontSize: 12, opacity: 0.7 }}>
                  –ù–∞–≥—Ä–∞–¥–∞ –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –∑–∞ –¥—Ä—É–≥–∞ –∏ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö –∏–º –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø—Ä–∏ –∏—Ö –ø–æ–∫—É–ø–∫–∞—Ö.
                </div>
              )}

              <label style={{ display: "grid", gap: 6, maxWidth: 260 }}>
                <span>–†–∞–∑–º–µ—Ä –ø–æ–æ—â—Ä–µ–Ω–∏—è ({type === "fixed" ? "–±–∞–ª–ª—ã" : "%"})</span>
                <input
                  type="number"
                  min="0"
                  value={rewardValue}
                  onChange={(event) => setRewardValue(event.target.value)}
                  style={{ padding: "10px 12px", borderRadius: 10, border: "1px solid rgba(148,163,184,0.35)", background: "rgba(15,23,42,0.6)", color: "#e2e8f0" }}
                />
              </label>

              <div style={{ display: "flex", gap: 12, alignItems: "center" }}>
                <div style={{
                  width: 140,
                  height: 70,
                  background: "rgba(148,163,184,0.1)",
                  borderRadius: 12,
                  display: "grid",
                  placeItems: "center",
                  fontSize: 26,
                }}>
                  ü§ù
                </div>
                <div style={{ fontSize: 12, opacity: 0.7 }}>–°—Ö–µ–º–∞: –ü—Ä–∏–≥–ª–∞—à–∞—é—â–∏–π ‚Üí –î—Ä—É–≥. –ü—Ä–∏ –º–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è —Ü–µ–ø–æ—á–∫–∞ ¬´–î—Ä—É–≥ ‚Üí –ï–≥–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã–µ¬ª.</div>
              </div>
            </section>

            <section style={{ display: "grid", gap: 16 }}>
              <div style={{ fontSize: 16, fontWeight: 600 }}>–î—Ä—É–≥</div>

              <label style={{ display: "grid", gap: 6, maxWidth: 260 }}>
                <span>–°–∫–æ–ª—å–∫–æ –±–∞–ª–ª–æ–≤ –ø–æ–ª—É—á–∏—Ç –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã–π –¥—Ä—É–≥?</span>
                <input
                  type="number"
                  min="0"
                  value={friendBonus}
                  onChange={(event) => setFriendBonus(event.target.value)}
                  style={{ padding: "10px 12px", borderRadius: 10, border: "1px solid rgba(148,163,184,0.35)", background: "rgba(15,23,42,0.6)", color: "#e2e8f0" }}
                />
              </label>

              <label style={{ display: "flex", gap: 10, alignItems: "flex-start" }}>
                <input
                  type="checkbox"
                  checked={stackWithRegistration}
                  onChange={(event) => setStackWithRegistration(event.target.checked)}
                />
                <span>
                  <div>–°—É–º–º–∏—Ä–æ–≤–∞—Ç—å –±–∞–ª–ª—ã –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –∏ –±–∞–ª–ª—ã –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é</div>
                  {stackWithRegistration && (
                    <div style={{ fontSize: 12, opacity: 0.7 }}>–ù–∞–ø—Ä–∏–º–µ—Ä: 150 –±–∞–ª–ª–æ–≤ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é + 300 –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∫–µ = 450 –±–∞–ª–ª–æ–≤.</div>
                  )}
                </span>
              </label>
            </section>

            <section style={{ display: "grid", gap: 16 }}>
              <div style={{ fontSize: 16, fontWeight: 600 }}>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é</div>

              <label style={{ display: "grid", gap: 6 }}>
                <span>–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ ¬´–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞¬ª</span>
                <textarea
                  value={message}
                  maxLength={300}
                  onChange={(event) => setMessage(event.target.value)}
                  rows={4}
                  style={{ padding: "12px", borderRadius: 12, border: "1px solid rgba(148,163,184,0.35)", background: "rgba(15,23,42,0.6)", color: "#e2e8f0" }}
                />
                <div style={{ fontSize: 12, opacity: 0.7 }}>
                  –û—Å—Ç–∞–ª–æ—Å—å —Å–∏–º–≤–æ–ª–æ–≤: {charsLeft}. –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã: {"{businessname}"}, {"{bonusamount}"}, {"{code}"}, {"{link}"}
                </div>
              </label>
            </section>

            <div style={{ display: "flex", justifyContent: "flex-end" }}>
              <Button variant="primary" type="submit">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</Button>
            </div>
          </form>
        </CardBody>
      </Card>
    </div>
  );
}
